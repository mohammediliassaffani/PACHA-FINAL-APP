// scripts/generateEnv.cjs
const path = require('path');
const fs = require('fs');
const dotenv = require('dotenv');
const { z } = require('zod');

const APP_ENV = process.env.APP_ENV || 'development';
const envPath = path.resolve(__dirname, `../.env.${APP_ENV}`);

const envResult = dotenv.config({ path: envPath });
if (envResult.error) {
  console.error(`Failed to load ${envPath}:`, envResult.error);
  process.exit(1);
}

const env = envResult.parsed || {};

const clientSchema = z.object({
  VITE_APP_ENV: z.enum(['development', 'staging', 'production']),
  VITE_API_URL: z.string().url(),
  VITE_VAR_NUMBER: z.coerce.number(),
  VITE_VAR_BOOL: z.coerce.boolean(),
});

const clientEnvResult = clientSchema.safeParse(env);
if (!clientEnvResult.success) {
  console.error(
    'Invalid client environment variables:',
    clientEnvResult.error.flatten().fieldErrors
  );
  process.exit(1);
}

const clientEnv = clientEnvResult.data;
const envFileContent = `
// This file is generated automatically by scripts/generateEnv.ts
// Do not edit this file manually

const Env = ${JSON.stringify(clientEnv, null, 2)} as const;

export default Env;
`;
const outputPath = path.resolve(__dirname, '../src/env.generated.ts');
fs.writeFileSync(outputPath, envFileContent);

console.log('Environment variables generated successfully.');
